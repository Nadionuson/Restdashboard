generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id              Int         @id @default(autoincrement())
  name            String
  location        String
  status          String
  highlights      String?
  lastVisitedDate DateTime?
  isPrivate       Boolean?
  evaluation      Evaluation?
  hashtags        Hashtag[]   @relation("RestaurantHashtags")
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  ownerId         Int?
  owner           User?       @relation(fields: [ownerId], references: [id])
}

model Evaluation {
  id                 Int   @id @default(autoincrement())
  locationRating     Int
  serviceRating      Int
  priceQualityRating Int
  foodQualityRating  Int
  atmosphereRating   Int
  finalEvaluation    Float

  restaurantId Int        @unique
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model Hashtag {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  restaurants Restaurant[] @relation("RestaurantHashtags")
}

model RestaurantHistory {
  id              Int
  name            String
  location        String
  status          String
  highlights      String?
  lastVisitedDate DateTime?
  evaluation      Json
  hashtags        Json
  createdAt       DateTime
  updatedAt       DateTime
  deletedAt       DateTime @default(now())

  @@id([id, deletedAt])
}

model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  passwordHash     String?  // for traditional login
  loginCode        String?  // one-time code for passwordless login
  loginCodeExpires DateTime? // when the code expires
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  restaurants      Restaurant[] // assuming each user owns multiple restaurants
}
